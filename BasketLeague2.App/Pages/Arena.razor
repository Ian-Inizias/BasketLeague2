@page "/Arena"

@inject HttpClient Http
@inject IJSRuntime JsRuntime

@using BasketLeague2.Utils.Models
@using BasketLeague2.Utils.Utils

<PageTitle>Arena</PageTitle>

<h3>Arena</h3>

@if (_teams.Any())
{
    <Container>
        <Row>
            <Column>
                <Label>TEAM 1</Label>
                <Select TValue="int" aria-label="Select team 1" @bind-SelectedValue="@_team1">
                    @foreach (var t in _teams)
                    {
                        <SelectItem Value="@t.Codigo">@t.NombreCompleto</SelectItem>
                    }
                </Select>
            </Column>
            <Column>
                <Label>TEAM 2</Label>
                <Select TValue="int" aria-label="Select team 2" @bind-SelectedValue="@_team2">
                    @foreach (var t in _teams)
                    {
                        <SelectItem Value="@t.Codigo">@t.NombreCompleto</SelectItem>
                    }
                </Select>
            </Column>
        </Row>
    </Container>
}

<Container>
    <button class="btn btn-primary" @onclick="SimulateGame">START GAME</button>
    <button class="btn btn-primary" @onclick="SimulateGameWithPlayers">START GAME WITH PLAYERS</button>
</Container>

@if (_result != null)
{
    @if (_aResult == null)
    {
        <Container>
            <Row >
                <Column>
                    <label>@_result.Equipo1</label>
                    <label>@_result.Resultado1</label>
                </Column>
                <Column >
                    <label>@_result.Equipo2</label>
                    <label>@_result.Resultado2</label>
                </Column>
            </Row>
        </Container>
    }
    else
    {
        <Container>
            <Row>
                <Column>
                    <Table Striped>
                        <TableHeader ThemeContrast="ThemeContrast.Light">
                            <TableRow>
                                <TableHeaderCell>Player</TableHeaderCell>
                                <TableHeaderCell>Pts</TableHeaderCell>
                            </TableRow>
                        </TableHeader>
                        <TableBody>
                            @foreach (var playerResult in _aResult.Stats1.ConvertToPlayerResult())
                            {
                                var p = _players.First(p => p.Codigo == playerResult.Codigo);

                                <TableRow>
                                    <TableRowCell>@p.Name "@p.Nickname"</TableRowCell>
                                    <TableRowCell>@playerResult.Total</TableRowCell>
                                </TableRow>
                            }
                            <TableRow>
                                <TableRowCell>
                                    <strong>TOTAL</strong>
                                </TableRowCell>
                                <TableRowCell>
                                    <strong>@_result.Resultado1</strong>
                                </TableRowCell>
                            </TableRow>
                        </TableBody>
                    </Table>
                </Column>
                <Column>
                    <Table Striped>
                        <TableHeader ThemeContrast="ThemeContrast.Light">
                            <TableRow>
                                <TableHeaderCell>Player</TableHeaderCell>
                                <TableHeaderCell>Pts</TableHeaderCell>
                            </TableRow>
                        </TableHeader>
                        <TableBody>
                            @foreach (var playerResult in _aResult.Stats2.ConvertToPlayerResult())
                            {
                                var p = _players.First(p => p.Codigo == playerResult.Codigo);

                                <TableRow>
                                    <TableRowCell>@p.Name "@p.Nickname"</TableRowCell>
                                    <TableRowCell>@playerResult.Total</TableRowCell>
                                </TableRow>
                            }
                            <TableRow>
                                <TableRowCell>
                                    <strong>TOTAL</strong>
                                </TableRowCell>
                                <TableRowCell>
                                    <strong>@_result.Resultado2</strong>
                                </TableRowCell>
                            </TableRow>
                        </TableBody>
                    </Table>
                </Column>
            </Row>
        </Container>
    }

    <button class="btn btn-primary" @onclick="CopyText">COPY JSON</button>
}

@code {
    private IEnumerable<Team> _teams = new Team[] { };
    private IEnumerable<Player> _players = new Player[] { };

    private int _team1;
    private int _team2;

    private Result? _result;
    private AdvancedResult? _aResult;

    private string _jsonResult = "";

    protected override async Task OnInitializedAsync()
    {
        await GetTeams();
        await GetPlayers();
    }

    private async Task GetTeams()
    {
        var t = await Http.GetFromJsonAsync<IEnumerable<Team>>("data/teams.json");
        _teams = _teams.Concat(t!.OrderBy(team => team.NombreCompleto));
        _team1 = _teams.First().Codigo;
        _team2 = _team1;
    }

    private async Task GetPlayers()
    {
        var p = await Http.GetFromJsonAsync<IEnumerable<Player>>("data/players.json");
        _players = _players.Concat(p!.OrderByDescending(player => player.Overall));
    }

    private void SimulateGame()
    {
        var t1 = _teams.First(t => t.Codigo == _team1);
        var t2 = _teams.First(t => t.Codigo == _team2);

        _aResult = null;
        _result = GameUtils.SimulateGame(t1, t2);

        _jsonResult = System.Text.Json.JsonSerializer.Serialize(new Result
        {
            Equipo1 = $"{_team1}",
            Equipo2 = $"{_team2}",
            Fecha = _result.Fecha,
            Resultado1 = _result.Resultado1,
            Resultado2 = _result.Resultado2
        });
    }

    private void SimulateGameWithPlayers()
    {
        var players1 = _players.Where(p => p.Team == _team1).ToList();
        var players2 = _players.Where(p => p.Team == _team2).ToList();

        _aResult = GameUtils.SimulateGameWithPlayers(players1, players2);
        _result = _aResult;

        _jsonResult = System.Text.Json.JsonSerializer.Serialize(new AdvancedResult
        {
            Equipo1 = $"{_team1}",
            Equipo2 = $"{_team2}",
            Fecha = _aResult.Fecha,
            Resultado1 = _aResult.Resultado1,
            Resultado2 = _aResult.Resultado2,
            Stats1 = _aResult.Stats1,
            Stats2 = _aResult.Stats2
        });
    }

    private async void CopyText()
    {
        await JsRuntime.InvokeVoidAsync("clipboardCopy.copyText", _jsonResult);
    }

}