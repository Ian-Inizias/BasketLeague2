@page "/Timetable"

@inject HttpClient Http

@using BasketLeague2.Utils.Models
@using BasketLeague2.Utils.Utils

<h3>Timetables</h3>

<table class="table table-striped">
    <thead class="thead-light">
        <tr>
            <th>
                FECHA
            </th>
            <th>
                EQUIPO 1
            </th>
            <th>
                EQUIPO 2
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var m in matches)
        {
            <tr>
                <td>@m.Fecha</td>
                <td>@m.Equipo1</td>
                <td>@m.Equipo2</td>
            </tr>
        }
    </tbody>
</table>

@code {
    public IEnumerable<Team> teams = new Team[] { };
    public IEnumerable<Utils.Models.Match> matches = new Utils.Models.Match[] { };

    protected override async Task OnInitializedAsync()
    {
        await GetTeams();
        await GetTimeTables();
    }

    private async Task GetTeams()
    {
        var t = await Http.GetFromJsonAsync<IEnumerable<Team>>("data/teams.json");
        teams = teams.Concat(t.OrderBy(t => t.NombreCompleto));
    }

    private async Task GetTimeTables()
    {
        var m = await Http.GetFromJsonAsync<IEnumerable<Utils.Models.Match>>("data/matches.json");

        foreach(var match in m)
        {
            match.Equipo1 = teams.FirstOrDefault(t => t.Codigo == int.Parse(match.Equipo1)).NombreCompleto;
            match.Equipo2 = teams.FirstOrDefault(t => t.Codigo == int.Parse(match.Equipo2)).NombreCompleto;
        }
        matches = matches.Concat(m.OrderBy(m => m.Fecha));
    }
}
