@page "/Players"

@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject NavigationManager Navigation

@using BasketLeague2.Utils.Models

<h3>PlayerList</h3>

<button Class="btn btn-primary" @onclick="GeneratePlayers">GENERATE RANDOM PLAYER</button>

<table class="table table-striped">
    <thead class="thead-light">
    <tr>
        <th>
            NOMBRE
        </th>
        <th>
            EQUIPO
        </th>
        <th>
            TIRO DOBLE
        </th>
        <th>
            TIRO TRIPLE
        </th>
        <th>
            FÍSICO
        </th>
        <th>
            PLAYMAKING
        </th>
        <th>
            REBOTE
        </th>
        <th>
            DEFENSA
        </th>
        <th>
            MEDIA
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var p in _players)
    {
        <tr>
            <td>@p.Name "@p.Nickname"</td>
            <td>@p.Team</td>
            <td>@p.InsideScoring</td>
            <td>@p.OutsideScoring</td>
            <td>@p.Athleticism</td>
            <td>@p.Playmaking</td>
            <td>@p.Rebounding</td>
            <td>@p.Defending</td>
            <td>@p.Overall</td>
            <td>
                <button class="btn btn-primary" @onclick="_ => LoadJugador(p.Codigo)">INFO</button>
            </td>
        </tr>
    }
    </tbody>
</table>

@code {
    private string _jsonResult = "";

    private IEnumerable<Player> _players = new Player[] { };

    protected override async Task OnInitializedAsync()
    {
        await GetPlayers();
    }

    private async Task GetPlayers()
    {
        var p = await Http.GetFromJsonAsync<IEnumerable<Player>>("data/players.json");
        _players = _players.Concat(p.OrderByDescending(p => p.Overall));
    }

    private async Task GeneratePlayers()
    {
        var players = Player.RandomPlayer(10);
        _jsonResult = System.Text.Json.JsonSerializer.Serialize(players);
        await JsRuntime.InvokeVoidAsync("clipboardCopy.copyText", _jsonResult);
    }

    private void LoadJugador(int codigo)
    {
        Navigation.NavigateTo($"Players/Player/{codigo}");
    }

}